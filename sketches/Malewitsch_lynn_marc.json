{
  "version": "1.3.4",
  "revision": 39,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "name": "Malewitsch_Korrektur",
      "mod": "1610475908065",
      "type": "sketch",
      "code": "let credits = { \n    \"student_names\": \"Lynn Sterchi, Marc Mueller\", \n    \"recode_artist\": \"Kasimir Malewitsch\", \n    \"recode_title\": \"The Square\", \n    \"recode_year\": 1913\n} \n\nlet orbitControlEnable = false\n\nlet backgroundChange = false;\n\nlet audioChange = false;\n\nlet rotationChange = false;\n\nlet mySlider = false;\n\nlet button = false;\n\n\nfunction setup() {\n\n\tcreateCanvas(windowWidth, windowHeight, WEBGL);\n\tangleMode(DEGREES)\n\n\tinitgui()\n\n\tsetupAudio();\n\n\twindowResized = function() {\n\t\tresizeCanvas(windowWidth, windowHeight);\n\t\tslider.position(width * 0.59, 55);\n\t\tbackgroundCheck.position(width * 0.29, 30);\n\t\torbitControlCheck.position(width * 0.4, 30);\n\t\taudioCheck.position(width * 0.5, 30);\n\t\trotationCheck.position(width * 0.59, 30);\n\t\tbutton.position(width * 0.7,30);\n\n\t}\n}\n\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\n\tupdateAudio();\n\n\tbackground(255);\n\n\tfill(0);\n\tortho();\n\n\t// push();\n\t// stroke(0)\n\t// rect(height * 0.6, -height * 0.48, height * 0.3, height * 0.17)\t\n\t// fill(0)\n\t// pop();\n\n\tcursor(ARROW)\n\n\tif(backgroundChange) {\n\n\t\tbackground(0);\n\t\t//stroke(255);\n\t\tbackgroundCheck.style('color', 'white')\n\t\torbitControlCheck.style('color', 'white')\n\t\taudioCheck.style('color', 'white')\n\t\trotationCheck.style('color', 'white')\n\n\t} else {\n\t\tbackground(255)\n\t\tbackgroundCheck.style('color', 'black')\n\t\torbitControlCheck.style('color', 'black')\n\t\taudioCheck.style('color', 'black')\n\t\trotationCheck.style('color', 'black')\n\t}\n\n\tif(orbitControlEnable) {\n\n\t\torbitControl();\n\t} else {\n\t\torbitControl(1, 0, 0)\n\t}\n\t\n\n\tif(audioChange) {\n\t\tscale(map(ampEase, 0, 1000, 1.0, 5.0))\n\t} else {\n\t\tscale(1)\n\t}\n\n\n\tif(rotationChange) {\n\t\tslider.show()\n\t\tlet x = slider.value()\n\t\trotateY(frameCount * (x / 10))\n\t} else {\n\t\tslider.hide()\n\n\t}\n\n\n\n\ttranslate(-height * 0.001, -height * 0.01, -height * 0.4)\n\trect(-height * 0.39, height * 0.21, height * 0.3, height * 0.2)\n\n\ttranslate(-height * 0.001, -height * 0.01, height * 0.1)\n\trect(height * 0.01, -height * 0.38, height * 0.401, height * 0.2)\n\n\ttranslate(-height * 0.001, -height * 0.01, height * 0.05)\n\trect(-height * 0.3882, -height * 0.37, height * 0.255, height * 0.281)\n\n\ttranslate(-height * 0.001, -height * 0.01, height * 0.1)\n\trect(height * 0.012, height * 0.14, height * 0.2)\n\n\ttranslate(-height * 0.001, -height * 0.01, height * 0.05)\n\trect(-height * 0.132, -height * 0.35, height * 0.145, height * 0.281)\n\n\ttranslate(-height * 0.001, -height * 0.01, height * 0.1)\n\trect(-height * 0.085, -height * 0.06, height * 0.1, height * 0.52)\n\n\ttranslate(-height * 0.001, -height * 0.01, height * 0.05)\n\trect(height * 0.016, height * 0.37, height * 0.4, height * 0.1)\n\n\ttranslate(-height * 0.001, -height * 0.01, height * 0.1)\n\trect(-height * 0.383, -height * 0.039, height * 0.201, height * 0.319)\n\n\ttranslate(-height * 0.001, -height * 0.01, height * 0.05)\n\trect(height * 0.217, -height * 0.11, height * 0.201, height * 0.5)\n\n\ttranslate(-height * 0.001, -height * 0.01, height * 0.1)\n\trect(height * 0.018, -height * 0.10, height * 0.2, height * 0.3)\n\n\ttranslate(-height * 0.001, -height * 0.01, height * 0.1)\n\trect(-height * 0.179, -height * 0.01, height * 0.1, height * 0.32)\n\n\n\n\tfill(255)\n\tnoStroke()\n\ttranslate(height * 0.54, height * 0.11, -height * 0.4)\n\t//box(0 ,height*0.8, height*0.8)\n\n\ttranslate(-height * 0.12, -height * 0.2, -height * 0.25)\n\tbox(0, height * 0.4, height * 0.3)\n\n\ttranslate(-height * 0.12, height * 0.3, height * 0.1)\n\tbox(0, height * 0.2, height * 0.5)\n\n\ttranslate(-height * 0.12, height * 0.2, -height * 0.15)\n\tbox(0, height * 0.2, height * 0.2)\n\n\ttranslate(-height * 0.12, -height * 0.4, height * 0.45)\n\tbox(0, height * 0.2, height * 0.5)\n\n\ttranslate(-height * 0.12, -height * 0.2, -height * 0.15)\n\tbox(0, height * 0.2, height * 0.2)\n\n\ttranslate(-height * 0.12, height * 0., height * 0.25)\n\tbox(0, height * 0.2, height * 0.3)\n\n\ttranslate(-height * 0.1, height * 0.4, height * 0.)\n\tbox(0, height * 0.2, height * 0.3)\n\n\ttranslate(-height * 0.11, height * 0.2, -height * 0.15)\n\tbox(0, height * 0.2, height * 0.6)\n\n}\n\nfunction resetSketch() {\n\tcreateCanvas(windowWidth, windowHeight, WEBGL);\n\tresetgui()\n}\n\nfunction changeOrbitControl() {\n\tif(this.checked()) {\n\t\tconsole.log('Checking')\n\t\torbitControl(2, 0, 0)\n\t} else(console.log('Unchecking'))\n\t//orbitControl()\n}\n\nfunction resetgui(){\n\torbitControlEnable = false;\n\tbackgroundChange = false;\n\taudioChange = false;\n\trotationChange = false;\n\tmySlider = false;\n\t\n\t\n\tbackgroundCheck.checked(false);\n\torbitControlCheck.checked(false);\n\taudioCheck.checked(false)\n\trotationCheck.checked(false)\n\tslider.value(1)\n}\n\nfunction initgui() {\n\torbitControlEnable = false;\n\tbackgroundChange = false;\n\taudioChange = false;\n\trotationChange = false;\n\tmySlider = false;\n\n\tbackgroundCheck = createCheckbox(\" black or white\");\n\tbackgroundCheck.position(width * 0.29, 30);\n\tbackgroundCheck.style('font-family', 'krungthep')\n\tbackgroundCheck.changed(() => {\n\t\tbackgroundChange = !backgroundChange\n\t});\n\n\n\torbitControlCheck = createCheckbox(\" 360Â° control\", false);\n\torbitControlCheck.position(width * 0.4, 30);\n\torbitControlCheck.style('font-family', 'krungthep')\n\torbitControlCheck.size()\n\torbitControlCheck.changed(() => {\n\t\torbitControlEnable = !orbitControlEnable\n\n\n\t});\n\n\taudioCheck = createCheckbox(\" let's sing\", false);\n\taudioCheck.position(width * 0.5, 30);\n\taudioCheck.style('font-family', 'krungthep')\n\taudioCheck.changed(() => {\n\t\taudioChange = !audioChange\n\t});\n\n\trotationCheck = createCheckbox(' fancy dancy');\n\trotationCheck.position(width * 0.59, 30);\n\trotationCheck.style('font-family', 'krungthep');\n\trotationCheck.changed(() => {\n\t\trotationChange = !rotationChange\n\t});\n\n\n\tslider = createSlider(0, 50, 1, 1);\n\tslider.position(width * 0.59, 55);\n\tslider.style('width', '150px');\n\n\n\tbutton = createButton('reset');\n\tbutton.position(width * 0.7, 30);\n\tbutton.mousePressed(resetSketch);\n\tbutton.style('font-family', 'krungthep')\n\n}\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft = [],\n\twaveform = [],\n\tamp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tuserStartAudio();\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n} "
    }
  ]
}