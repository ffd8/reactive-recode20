{
  "version": "1.3.3",
  "revision": 37,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "Selina Baud, Sweesan Paskaran_Jürgen Lit Fischer",
      "mod": 1608203508085,
      "code": "let credits = {\n\t\"student_names\": \"Selina Baud, Sweesan Paskaran\",\n\t\"recode_artist\": \"Jürgen Lit Fischer\",\n\t\"recode_title\": \"Mit Zwischenraum, hindurchzuschaun\",\n\t\"recode_year\": 1986\n}\n\nlet getStarted = false;\nlet mySlider, myColor;\n\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tbackground(150);\n\n\tmySlider = createSlider(0, 100, 25.5, 1); // minValue, maxValue, defaultValue, stepSize\n\tmySlider.position(800, 20); // x,y\n\tmySlider.size(250);\n\tmySlider.style('-webkit-appearance', 'none'); // disable default style\n\tmySlider.style('background', 'blue'); // color\n\tmySlider.style('height', '5px');\n\tmySlider.style('outline', 'none');\n\n\tmyColor = createSlider(0, 255, 25.5, 5);\n\tmyColor.position(800, 40);\n\tmyColor.size(250);\n\tmyColor.style('-webkit-appearance', 'none'); // disable default style\n\tmyColor.style('background', 'black'); // color\n\tmyColor.style('height', '5px');\n\tmyColor.style('outline', 'none');\n\n\tbutton = createButton(\"click :)\");\n\tbutton.position(1200, 10);\n\tbutton.size(60, 40);\n\tbutton.style('color: white');\n\tbutton.style('background: blue');\n\tbutton.mouseClicked(function() {\n\t\tgetStarted = !getStarted;\n\t});\n\n\tfor(let i = 0; i < width; i += 5) {\n\t\t//background vertical stripes\n\t\tstroke(0);\n\t\tstrokeWeight(1);\n\t\tline(i, 0, i, height);\n\t}\n\tsetupAudio();\n}\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tupdateAudio();\n\n\tif(getStarted) {\n\t\tbackground(random(255) * '.1', random(100) * '.01', 100);\n\t} else {\n\t\tbackground(150);\n\t\tfor(let i = 0; i < width; i += 5) {\n\t\t\t//background vertical stripes\n\t\t\tstroke(0);\n\t\t\tstrokeWeight(1);\n\t\t\tline(i, 0, i, height);\n\t\t}\n\t}\n\n\n\t//background after click\n\tfor(let i = 0; i < width; i += 5) {\n\n\t\tif(getStarted) {\n\n\t\t\tstroke(frameCount * 30, 50, random(255));\n\t\t\tstrokeWeight(1 + ampEase); // ADDED AUDIO\n\t\t\tline(i, 0, i, height);\n\n\t\t}\n\n\t}\n\t//white wave line\n\tnoFill();\n\tstroke(255);\n\tstrokeWeight(4);\n\n\tif(getStarted) {\n\t\tnoFill();\n\t\tstroke(1, myColor.value(), 255 - myColor.value());\n\t\tstrokeWeight(ampEase);\n\t}\n\n\tfor(let j = 0; j < 21; j++) {\n\t\tbeginShape();\n\t\tfor(let i = 0; i < 30; i++) {\n\t\t\tlet x = map(i, 0, 29, width * '.1', width * '.9');\n\t\t\tlet y = map(j, 0, 19, height * '.1', height * '.9');\n\t\t\tlet centerDist = dist(x, y, width / 2, height / 2);\n\t\t\tlet offset = sin(centerDist * '.035') * abs(sin(j / 6) * mySlider.value());\n\n\t\t\tcurveVertex(x, y + offset);\n\t\t}\n\t\tendShape();\n\n\n\t\t//black wave lines\n\t\tpush();\n\n\t\tnoFill();\n\t\tstroke(0);\n\t\tstrokeWeight(6.5);\n\n\t\tbeginShape();\n\n\t\tfor(let i = 0; i < 30; i++) {\n\t\t\tlet x = map(i, 0, 29, width * '.1', width * '.9');\n\t\t\tlet y = map(j, 0, 19, height * '.1', height * '.9');\n\t\t\tlet centerDist = dist(x, y, width / 2, height / 2);\n\t\t\tlet offset = sin(centerDist * '.035') * abs(sin(j / 6) * myColor.value());\n\t\t\tcurveVertex(x, y + 6 + offset);\n\t\t}\n\t\tendShape();\n\t\tpop();\n\t}\n\n}\n\nfunction mousePressed() {\n\t//getStarted = true;\n}\n\n\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft = [],\n\twaveform = [],\n\tamp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tuserStartAudio();\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}