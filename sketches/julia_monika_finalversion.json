{
  "version": "1.3.3",
  "revision": 37,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "julia_monika_001",
      "mod": 1608214655681,
      "parent": "cc_ivk05_20201217133759",
      "code": "let credits = {\n\t\"student_names\": \"julia taras, monika christen\",\n\t\"recode_artist\": \"herbert franke and horst helbig\",\n\t\"recode_title\": \"computer science art\",\n\t\"recode_year\": 1980\n}\n\nlet SliderReactive;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tcolorMode(HSB, 100)\n\tsetupAudio();\n\t\n\tSliderReactive= createSlider(0, 1, 0, .01) // min, max, default, stepsize\n\t//SliderReactive = createSlider(freq*0, freq*20, freq*5, 1); // minValue, maxValue, defaultValue, stepSize\n\tSliderReactive.position(width*.77, height*.12);\n\tSliderReactive.style('width, 100px');\n\t\n}\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tupdateAudio();\n\tbackground(20)\n\tnoFill();\n\n\t//circles(loopCount, thickness, minSize, maxSize, minH, maxH)\n\n\t//small yellow\n\tcircles(100, 4, height * .0, height * .2, 3, 16);\n\tcircles(100, 4, height * .58, height * .0, 3, 16);\n\t\n\t//big yellow\n\tcircles(100, 5, height * .97, height * .8, 13, 10);\n\tcircles(100, 5, height * .78, height * .8, 13, 10);\n\n\t//big pink\n\tcircles(100, 5, height * .87, height * .8, 100, 94);\n\tcircles(100, 5, height * .68, height * .8, 100, 94);\n\n\t//smaller grey\n\tcircles(100, 4, height * .48, height * .0, 13, 13);\n\t\n\t//small  stroke\n\tstrokeWeight(3)\n\tstroke(10, 20, 20)\n\tellipse(width/2, height/2, height*.476)\n\t\n\t//small  stroke\n\tstrokeWeight(2)\n\tstroke(5, 60, 50)\n\tellipse(width/2, height/2, height*.575)\n\t\n\t//middle thin stroke\n\tstrokeWeight(1)\n\tstroke(10, 20, 30)\n\tellipse(width/2, height/2, height*.76)\n\t\n\t//big yellow stroke\n\tstrokeWeight(8)\n\tstroke(17, 90, 100)\n\tellipse(width/2, height/2, height*.867)\n\t\n\n\t//audio-reactive1\n\t\tfor(let i = 10; i < fft.length*0.1; i++) {\n\t\tlet freq = fft[i] * SliderReactive.value(); // (0, 255); \n\t\tfill(15,50,90,10)\n\t\tnoStroke()\n\t\tellipse(width/2, height/2,freq*5, freq*5)\n\t}\n\t\n\t//audio-reactive2\n\t\tfor(let i = 10; i < fft.length*0.1; i++) {\n\t\tlet freq = fft[i] * SliderReactive.value(); // (0, 255); \n\t\tfill(15,20,90,1)\n\t\tnoStroke()\n\t\tellipse(width/2, height/2,freq*20, freq*20)\n\t}\n\n\t//audio-reactive3\n\t\tfor(let i = 10; i < fft.length*0.1; i++) {\n\t\tlet freq = fft[i] * SliderReactive.value(); // (0, 255); \n\t\tnoFill()\n\t\tstroke(5, 60, 100)\n\t\tstrokeWeight(1)\n\t\t//noStroke()\n\t\tellipse(width/2, height/2,freq*3, freq*3)\n\t}\n}\n\nfunction circles(loopCount, thickness, minSize, maxSize, minH, maxH) {\n\tfor(let i = 0; i < loopCount; i++) {\n\t\tpush();\n\t\tlet mySize = map(i, 0, loopCount - 1, minSize, maxSize);\n\t\tlet myH = map(i, 0, loopCount - 1, minH, maxH);\n\t\tlet mySB = map(i, 0, loopCount - 1, 30, 100);\n\t\tstroke(myH, mySB, mySB); // hue, sat, bright\n\t\tstrokeWeight(thickness)\n\t\tellipse(width / 2, height / 2, mySize);\n\t\tpop();\n\t}\n}\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft = [],\n\twaveform = [],\n\tamp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tuserStartAudio();\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}\n"
    }
  ]
}