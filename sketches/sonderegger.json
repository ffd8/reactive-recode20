{
  "version": "1.3.4",
  "revision": 39,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "name": "schmetterling_update",
      "mod": 1610555095328,
      "type": "sketch",
      "code": "let credits = { \n    \"student_names\": \"Andri Stoisser, Sofia Camprubi\", \n    \"recode_artist\": \"Bruno Sonderegger\", \n    \"recode_title\": \"Schmetterling\", \n    \"recode_year\": 1971 \n} \n\n\tlet animation1;\n\tlet animation2;\n\tlet animation31;\n\tlet animation32;\n\tlet animation4;\n\tlet animation5;\n\tlet animation6;\n\tlet animation7;\n\tlet animation8;\n\tlet animation9;\n\tlet animation10;\n\tlet animation11;\n\tlet animation12;\n\tlet animation131;\n\tlet animation132;\n\tlet animation14;\n\tlet animation15;\n\tlet animation16;\n\tlet animation17;\n\tlet animation18;\n\tlet animation191;\n\tlet animation192;\n\tlet animation20;\n\t\n\tlet k;\n\tlet m;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tbackground(255);\n\tangleMode(DEGREES);\n\tsetupAudio();\n\n\t// SLIDERS\n\t\n\tsliderWidth = createSlider(0, 100, 0); // minValue, maxValue, defaultValue, stepSize\n\tsliderWidth.position(width -250, 50);\n\tsliderWidth.size(200);\n\tsliderWidth.style('cursor', 'pointer');\n\n\t// hi slider\n\thiS = createSlider(0.5, 1, 0.5, 0.05);\n\thiS.position(width -250, 75);\n\thiS.size(200);\n\thiS.style('cursor', 'pointer');\n\t\n\t// larger wing span\n\twingspan = createSlider(0.005, 1.65, 1, 0.005); \n\twingspan.position(width -250, 100);\n\twingspan.size(200);\n\twingspan.style('cursor', 'pointer');\n\n\tsliWidthBig = createSlider(-0.25, 0.25, 0, 0); \n\tsliWidthBig.position(width -250, 125);\n\tsliWidthBig.size(200);\n\tsliWidthBig.style('cursor', 'pointer');\n\n\tsliderHight = createSlider(0, 100, 0);\n\tsliderHight.position(width -250, 175);\n\tsliderHight.size(200);\n\tsliderHight.style('cursor', 'pointer');\n\n\t// n slider\n\tnS = createSlider(1, 19, 19, 1); \n\tnS.position(width -250, 200);\n\tnS.size(200);\n\tnS.style('cursor', 'pointer');\n\n\t// stokeWeight slider\n\tsliderStrokeWeight = createSlider(0.5, 5, 1.5, 0);\n\tsliderStrokeWeight.position(width -250, 250);\n\tsliderStrokeWeight.size(200);\n\tsliderStrokeWeight.style('cursor', 'pointer');\n\n\t// fill alpha slider\n\talphaS = createSlider(0, 400, 0, 20); \n\talphaS.position(width -250, 275);\n\talphaS.size(200);\n\talphaS.style('cursor', 'pointer');\n\n\t// red color slider\n\tredS = createSlider(0, 255, 0, 1); \n\tredS.position(width -250, 325);\n\tredS.size(200);\n\tredS.style('cursor', 'pointer');\n\n\t// yellow color slider\n\tyellowS = createSlider(0, 255, 0, 1); \n\tyellowS.position(width -250, 350);\n\tyellowS.size(200);\n\tyellowS.style('cursor', 'pointer');\n\n\t// blue color slider\n\tblueS = createSlider(0, 255, 0, 1); \n\tblueS.position(width -250, 375);\n\tblueS.size(200);\n\tblueS.style('cursor', 'pointer');\n\n\t// background color slider\n\tbackgroundS = createSlider(0, 255, 255, 5); \n\tbackgroundS.position(width -250, 400);\n\tbackgroundS.size(200);\n\tbackgroundS.style('cursor', 'pointer');\n\n\t// background alpa slider\n\tsliderPaint = createSlider(0, 100, 100,10);\n\tsliderPaint.position(width -250, 425);\n\tsliderPaint.size(200);\n\tsliderPaint.style('cursor', 'pointer');\n\n\t// amp1 slider\n\tsliderAmp1 = createSlider(0, 1.0, 0, 0.1);\n\tsliderAmp1.position(width -250, 475);\n\tsliderAmp1.size(200);\n\tsliderAmp1.style('cursor', 'pointer');\n\n\t// AMP fft\n\tsliderFft = createSlider(0, 1.0, 0, 0);\n\tsliderFft.position(width -250, 500); \n\tsliderFft.size(200);\n\tsliderFft.style('cursor', 'pointer');\n\t\n\t\n\t// CHECKBOX \n\t// first row small  'butterfly' movements, second row big movements\n\t\n\t//  c1 = a21; c2=a22; c3=a23;\n\ta21 = createCheckbox('');\n\ta21.changed(wingAnimation);\n\ta21.position(width - 250, 525);\n\ta21.style('cursor', 'pointer');\n\n\ta22 = createCheckbox('');\n\ta22.changed(wingAnimation);\n\ta22.position(width - 160, 525);\n\ta22.style('cursor', 'pointer');\n\n\ta23 = createCheckbox('');\n\ta23.changed(wingAnimation);\n\ta23.position(width - 70, 525);\n\ta23.style('cursor', 'pointer');\n\t\n\ta1 = createCheckbox('');\n\ta1.changed(wingAnimation);\n\ta1.position(width-250, 575);\n\ta1.style('cursor', 'pointer');\n\t\n\ta2 = createCheckbox('');\n\ta2.changed(wingAnimation);\n\ta2.position(width-230, 575);\n\ta2.style('cursor', 'pointer');\n\t\n\ta3 = createCheckbox('');\n\ta3.changed(wingAnimation);\n\ta3.position(width-210, 575);\n\ta3.style('cursor', 'pointer');\n\t\n\ta4 = createCheckbox('');\n\ta4.changed(wingAnimation);\n\ta4.position(width-190, 575);\n\ta4.style('cursor', 'pointer');\n\t\n\ta5 = createCheckbox('');\n\ta5.changed(wingAnimation);\n\ta5.position(width-170, 575);\n\ta5.style('cursor', 'pointer');\n\t\n\ta6 = createCheckbox('');\n\ta6.changed(wingAnimation);\n\ta6.position(width-150, 575);\n\ta6.style('cursor', 'pointer');\n\t\n\ta7 = createCheckbox('');\n\ta7.changed(wingAnimation);\n\ta7.position(width-130, 575);\n\ta7.style('cursor', 'pointer');\n\t\n\ta8 = createCheckbox('');\n\ta8.changed(wingAnimation);\n\ta8.position(width-110, 575);\n\ta8.style('cursor', 'pointer');\n\t\n\ta9 = createCheckbox('');\n\ta9.changed(wingAnimation);\n\ta9.position(width-90, 575);\n\ta9.style('cursor', 'pointer');\n\t\n\ta10 = createCheckbox('');\n\ta10.changed(wingAnimation);\n\ta10.position(width-70, 575);\n\ta10.style('cursor', 'pointer');\n\t\n\ta11 = createCheckbox('');\n\ta11.changed(wingAnimation);\n\ta11.position(width-250, 600);\n\ta11.style('cursor', 'pointer');\n\t\n\ta12 = createCheckbox('');\n\ta12.changed(wingAnimation);\n\ta12.position(width-230, 600);\n\ta12.style('cursor', 'pointer');\n\t\n\ta13 = createCheckbox('');\n\ta13.changed(wingAnimation);\n\ta13.position(width-210, 600);\n\ta13.style('cursor', 'pointer');\n\t\n\ta14 = createCheckbox('');\n\ta14.changed(wingAnimation);\n\ta14.position(width-190, 600);\n\ta14.style('cursor', 'pointer');\n\t\n\ta15 = createCheckbox('');\n\ta15.changed(wingAnimation);\n\ta15.position(width-170, 600);\n\ta15.style('cursor', 'pointer');\n\t\n\ta16 = createCheckbox('');\n\ta16.changed(wingAnimation);\n\ta16.position(width-150, 600);\n\ta16.style('cursor', 'pointer');\n\t\n\ta17 = createCheckbox('');\n\ta17.changed(wingAnimation);\n\ta17.position(width-130, 600);\n\ta17.style('cursor', 'pointer');\n\t\n\ta18 = createCheckbox('');\n\ta18.changed(wingAnimation);\n\ta18.position(width-110, 600);\n\ta18.style('cursor', 'pointer');\n\t\n\ta19 = createCheckbox('');\n\ta19.changed(wingAnimation);\n\ta19.position(width-90, 600);\n\ta19.style('cursor', 'pointer');\n\t\n\ta20 = createCheckbox('');\n\ta20.changed(wingAnimation);\n\ta20.position(width-70, 600);\n\ta20.style('cursor', 'pointer');\n}\n\n\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\n\tlet sliWidth = sliderWidth.value();\n\tlet sliHi = sliderHight.value();\n\tlet sliAmp1 = sliderAmp1.value();\n\tlet sliStrokeWeight = sliderStrokeWeight.value();\n\tlet sliPaint = sliderPaint.value();\n\tlet slWidthBig = sliWidthBig.value();\n\tlet ws = wingspan.value();\n\n\tupdateAudio();\n\tbackground(backgroundS.value(),sliPaint);\n\ttranslate(width / 2 + animation191, 0 + animation192);\n\n\tn = nS.value() - animation5 + animation15; // anzahl \"streifen\"\n\n\thi = hiS.value();\n\tswidth = -0.3 + k + animation2 + (ampEase * sliAmp1 / 100) + sliWidth / 420 - slWidthBig;\n\tswidth_big = 0.3 * animation6 * ws * animation16  + slWidthBig;\n\t\n\ts_length = 0.47 + sliHi / 50 + animation10 + animation20;\n\ty1 = 0.02;\n\ty2 = 0.05;\n\n\tswidth2 = 0.3- k - animation2 - (ampEase * sliAmp1 / 100) - sliWidth / 420 - slWidthBig;\n\tswidth_big2 = -0.3 * animation6 * ws * animation16 + slWidthBig;\n\n\t//ANIMATION\n\t\n\tif(a2.checked()){\n\t\tk = 0.1;\n\t\tanimation2 = cos(frameCount)/10;\n\t}else{\n\t\tk = 0;\n\t\tanimation2 = 0;\n\t}\n\t\n\tif(a5.checked()){\n\t\tanimation5 = sin(frameCount)*13;\n\t}else{\n\t\tanimation5 = 0;\n\t}\n\t\n\tif(a6.checked()){\n\t\tanimation6 = abs(sin(frameCount) -.1);\n\t}else{\n\t\tanimation6 = 1;\n\t}\n\t\n\tif(a7.checked()){\n\t\tanimation7 = abs(sin(frameCount));\n\t}else{\n\t\tanimation7 = 0;\n\t}\n\n\tif(a10.checked()){\n\t\tanimation10 = abs(sin(frameCount))/1.99\n\t}else{\n\t\tanimation10 = 0;\n\t}\n\t\n\tif(a15.checked()){\n\t\tanimation15 = abs(sin(frameCount))*60;\n\t}else{\n\t\tanimation15 = 0;\n\t}\n\t\t\n\tif(a16.checked()){\n\t\tanimation16 = sin(frameCount)*1.65;\n\t}else{\n\t\tanimation16 = 1;\n\t}\n\t\n\tif(a17.checked()){\n\t\tanimation17 = abs(sin(frameCount))*16;\n\t}else{\n\t\tanimation17 = 0;\n\t}\n\t\n\tif(a19.checked()){\n\t\tanimation191 = cos(frameCount)*200;\n\t\tanimation192 = sin(frameCount)*50;\n\t}else{\n\t\tanimation191 = 0;\n\t\tanimation192 = 0;\n\t}\n\t\n\tif(a20.checked()){\n\t\tanimation20 = sin(frameCount);\n\t}else{\n\t\tanimation20 = 0;\n\t}\n\t\n\t//COLOR amp\n\n\tif(a21.checked()) {\n\t\tredCheck = yellowS.value()-ampEase%200;\n\t} else {\n\t\tredCheck = 0;\n\t}\n\n\tif(a22.checked()) {\n\t\tyellowCheck = blueS.value()-ampEase%180;\n\t} else {\n\t\tyellowCheck = 0;\n\t}\n\n\tif(a23.checked()) {\n\t\tblueCheck = redS.value()-ampEase%190;\n\t} else {\n\t\tblueCheck = 0;\n\t}\n\n\n\tslFft = sliderFft.value();\n\t\n\tfill(backgroundS.value(), alphaS.value());\n\tstroke(redS.value()+redCheck, yellowS.value()+yellowCheck, blueS.value()+blueCheck);\n\tstrokeWeight(sliderStrokeWeight.value() + animation7 + animation17);\n\n\twingAnimation(true);\n\twingAnimation(false);\n\n\tpush();\n\ttranslate(0, height);\n\trotate(180);\n\twingAnimation(true);\n\twingAnimation(false);\n\tpop();\n\t\n}\n\n\nfunction wingAnimation(mirror){\n\tbeginShape();\n\tfor(i = 0; i < n; i++) {\n\t\tlet waveformSel = waveform[floor(map(i, 0, n, 0, waveform.length))]; // -1, 1\n\t\t// +waveformSel*50\n\t\tlet fftSel = fft[floor(map(i, 0, n, 0, fft.length))]; // 0 - 255\n\t\t// + fftSel\n\t\t\n\t\tif(mirror) {\n\t\t\tvertex(width * m * animation12 * swidth + slFft * waveformSel * 500, \n\t\t\t\t\theight * hi * animation8 * animation18);\n\t\t\tvertex(width * animation31 * animation131 * swidth_big + slFft * waveformSel * 500, \n\t\t\t\t\theight * (y1 * animation4 *animation14 + i / (n+ animation9) + animation1 + animation11) * s_length);\n\t\t\tvertex(width * animation32 * animation132 * swidth_big + slFft * waveformSel * 500, \n\t\t\t\t\theight * (y2 * animation4 *animation14 + i / (n+animation9) + animation1 + animation11) * s_length);\n\t\t} else {\n\t\t\tvertex(width * m * animation12 * swidth2 + slFft * waveformSel * 500, \n\t\t\t\t\theight * hi * animation8 * animation18);\n\t\t\tvertex(width * animation31 * animation131 * swidth_big2  + slFft * waveformSel * 500, \n\t\t\t\t\theight * (y1* animation4 *animation14 + i / (n+animation9) + animation1 + animation11) * s_length);\n\t\t\tvertex(width * animation32 * animation132 * swidth_big2 + slFft * waveformSel * 500, \n\t\t\t\t\theight * (y2 * animation4 *animation14 + i / (n+animation9) + animation1 + animation11) * s_length);\n\t\t}\n\t}\n\tendShape(CLOSE);\n\t\n\t\n\tif(a1.checked()){\n\t\tanimation1 = abs(sin(frameCount))/15;\n\t}else{\n\t\tanimation1 = 0;\n\t}\n\t\n\tif(a3.checked()){\n\t\tanimation31 = abs(cos(frameCount/2));\n\t\tanimation32 = abs(cos(frameCount))/60;\n\t}else{\n\t\tanimation31 = 1;\n\t\tanimation32 = 1;\n\t}\n\t\n\tif(a4.checked()){\n\t\tanimation4 = abs(sin(frameCount)*1.5);\n\t}else{\n\t\tanimation4 = 1;\n\t}\n\t\n\tif(a8.checked()){\n\t\tanimation8 = abs(sin(frameCount))*2;\n\t}else{\n\t\tanimation8 = 1;\n\t}\n\t\n\tif(a9.checked()){\n\t\tanimation9 = abs(sin(frameCount))*2;\n\t}else{\n\t\tanimation9 = 0;\n\t}\n\t\n\tif(a11.checked()){\n\t\tanimation11 = sin(frameCount);\n\t}else{\n\t\tanimation11 = 0;\n\t}\n\t\n\tif(a12.checked()){\n\t\tm = 1.65\n\t\tanimation12 = cos(frameCount);\n\t}else{\n\t\tm = 1\n\t\tanimation12 = 1;\n\t}\n\t\n\tif(a13.checked()){\n\t\tanimation131 = cos(frameCount/2)*1.65;\n\t\tanimation132 = cos(frameCount)*1.65;\n\t}else{\n\t\tanimation131 = 1;\n\t\tanimation132 = 1;\n\t}\n\t\n\tif(a14.checked()){\n\t\tanimation14 = sin(frameCount)*5;\n\t}else{\n\t\tanimation14 = 1;\n\t}\n\t\n\tif(a18.checked()){\n\t\tanimation18 = sin(frameCount)*3;\n\t}else{\n\t\tanimation18 = 1;\n\t}\n\t\n}\n\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft = [],\n\twaveform = [],\n\tamp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tuserStartAudio();\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}